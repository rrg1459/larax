***
***

***********************************************
*********** descripcion del profesor **********
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

Relaciones hasMany en Eloquent
En ese video vamos a aprender a relacionar usuarios con todos sus post, considerando que cada usuario tiene varios contenidos, vamos a trabajar primero en modelo de usuario (User.php) y vamos a crear una función dónde utiilizaremos la relación hasMany, a continuación escribo la función que debemos utilizar:

public function messages()
{
    return $this->hasMany(Message::Class);
}
Luego procederemos a modificar nuestro archivo web.php y crearemos el controlador ‘UsersController@show’ definiendo la siguiente línea de código:

Route::get('/{username}', 'UserController@show');
Por último procederemos a crear nuestro controller y para esto repetiremos los pasos de ir a la terminal, y ejercutar el comando:

php artisan make:controller <nombre del controller>
Y en este caso específico usaremos:

php  artisan  make:controller   UserController
Esto genarará un nuevo controlador y ahí crearemos la lógica de nuestro controlador para poder ir a buscar a un usuario a través del modelo de usuario esto lo hacemos de la siguiente forma:

<?php

namespace App\Http\Controllers;

use App\User;
use Illuminate\Http\Request;

class UsersController extends Controller
{
    public function show($username)
    {
        $user = User::where('username', $username)->first();

        return view('users.show', [
            'user' => $user,
        ]);
    }
}
Por último tenemos que agregar los estilos de bootstrap a nuestra vista que se encargará de mostrar el contenido de nuestros usuarios.

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
*********** descripcion del profesor **********
***********************************************

***
***
php artisan make:controller UsersController

+++
+++
php artisan migrate:refresh --seed

+++
+++
funcion latest()

en app\Http\controllers\PagesController.php

el comando....

$messages = Message::latest()->paginate(10);

La funcion latest() se usa para ordenar los mensajes del mas reciente al mas viejo, antes de pedir el paginado, eso quiere decir que va a ordenar los mensajes por creación descendiente.

